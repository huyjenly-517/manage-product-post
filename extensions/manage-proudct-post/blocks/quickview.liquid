{% comment %}
  Quickview Block for Shopify Themes
  This block provides JavaScript functionality for quickview
  Usage: {% render 'quickview' %}
{% endcomment %}

{%- if block.settings.enable_quickview -%}
  <!-- Quickview JavaScript functionality only -->
  <!-- Button HTML is rendered by the snippet -->
  
  <script>
    // Theme settings for quickview
    window.quickviewThemeConfig = {
      enabled: {{ block.settings.enable_quickview | json }},
      buttonText: {{ block.settings.button_text | default: 'Quick View' | json }},
      position: {{ block.settings.button_position | default: 'below' | json }},
      buttonStyle: {{ block.settings.button_style | default: 'primary' | json }},
      buttonSize: {{ block.settings.button_size | default: 'medium' | json }},
      showIcon: {{ block.settings.show_icon | json }},
      icon: {{ block.settings.icon | default: '👁️' | json }},
      customColor: {{ block.settings.custom_color | json }},
      textColor: {{ block.settings.text_color | json }},
      showQuickviewIcon: {{ block.settings.show_quickview_icon | json }},
      quickviewIcon: {{ block.settings.quickview_icon | default: '⚡' | json }}
    };
    
    console.log('Theme quickview config loaded:', window.quickviewThemeConfig);
    
    // Initialize quickview functionality when button is clicked
    if (window.quickviewThemeConfig.enabled) {
      // Wait for DOM to be ready
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          setupQuickviewButtons();
        });
      } else {
        setupQuickviewButtons();
      }
    }
    
    // Setup quickview button functionality
    function setupQuickviewButtons() {
      const quickviewButtons = document.querySelectorAll('.quickview-button[data-quickview="true"]');
      console.log('Setting up quickview buttons:', quickviewButtons.length);
      
      quickviewButtons.forEach(button => {
        // Apply admin settings to button
        applyButtonSettings(button);
        
        // Find the product element (parent container)
        const productElement = button.closest('.card__content, .card__information, .product-item, .grid-product, .product-card, .grid__item, .product-card-wrapper');
        
        if (productElement) {
          button.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            
            console.log('Quickview button clicked!', e);
            openQuickviewModal(productElement);
            
            return false;
          });
          
          console.log('Quickview button setup complete for:', productElement);
        } else {
          console.warn('Could not find product element for button:', button);
        }
      });
    }
    
    // Apply admin settings to button
    function applyButtonSettings(button) {
      const config = window.quickviewThemeConfig;
      
      // Update button text
      if (config.buttonText && config.buttonText !== 'Quick View') {
        const iconSpan = button.querySelector('.quickview-icon');
        if (iconSpan) {
          button.innerHTML = `${iconSpan.outerHTML} ${config.buttonText}`;
        } else {
          button.textContent = config.buttonText;
        }
      }
      
      // Update button style classes
      button.className = `quickview-button button button--${config.buttonStyle} button--${config.buttonSize}`;
      
      // Update custom colors
      if (config.customColor) {
        button.style.backgroundColor = config.customColor;
        button.style.borderColor = config.customColor;
      }
      
      if (config.textColor) {
        button.style.color = config.textColor;
      }
      
      // Update icon
      if (config.showIcon && config.icon) {
        const iconSpan = button.querySelector('.quickview-icon');
        if (iconSpan) {
          iconSpan.textContent = config.icon;
        }
      }
      
      // Add quickview icon if enabled
      if (config.showQuickviewIcon && config.quickviewIcon) {
        const quickviewIconSpan = document.createElement('span');
        quickviewIconSpan.className = 'quickview-quickview-icon';
        quickviewIconSpan.textContent = config.quickviewIcon;
        button.appendChild(quickviewIconSpan);
      }
      
      console.log('Button settings applied:', button);
    }
    
    // Open quickview modal
    function openQuickviewModal(element) {
      try {
        console.log('=== OPENING QUICKVIEW MODAL ===');
        console.log('Element:', element);
        
        // Close existing modal
        const existing = document.querySelector('.quickview-modal');
        if (existing) {
          console.log('Removing existing modal');
          existing.remove();
        }

        // Get product data
        const title = element.querySelector('h3, h4, .product-title')?.textContent?.trim() || 'Product';
        const price = element.querySelector('.price, .product-price')?.textContent?.trim() || '';
        const image = element.querySelector('img')?.src || '';
        const link = element.querySelector('a[href*="/products/"]')?.href || '';

        console.log('Product data found:', { title, price, image, link });

        // Create modal container
        const modal = document.createElement('div');
        modal.className = 'quickview-modal';
        modal.id = 'quickview-modal-' + Date.now();
        modal.style.cssText = `
          position: fixed !important;
          top: 0 !important;
          left: 0 !important;
          right: 0 !important;
          bottom: 0 !important;
          z-index: 999999 !important;
          background: rgba(0, 0, 0, 0.5) !important;
          display: flex !important;
          align-items: center !important;
          justify-content: center !important;
          font-family: inherit !important;
        `;

        // Create modal content
        const content = document.createElement('div');
        content.className = 'quickview-modal-content';
        content.style.cssText = `
          background: white !important;
          padding: 24px !important;
          max-width: 500px !important;
          max-height: 80vh !important;
          overflow: auto !important;
          border-radius: 8px !important;
          position: relative !important;
          box-shadow: 0 10px 25px rgba(0,0,0,0.2) !important;
          z-index: 1000000 !important;
        `;

        // Create close button
        const closeBtn = document.createElement('button');
        closeBtn.innerHTML = '×';
        closeBtn.className = 'quickview-close-btn';
        closeBtn.style.cssText = `
          position: absolute !important;
          top: 12px !important;
          right: 12px !important;
          background: none !important;
          border: none !important;
          font-size: 24px !important;
          cursor: pointer !important;
          color: #333 !important;
          width: 30px !important;
          height: 30px !important;
          display: flex !important;
          align-items: center !important;
          justify-content: center !important;
          z-index: 1000001 !important;
        `;
        
        // Function to close modal and restore scrolling
        const closeModal = () => {
          console.log('Closing modal and restoring overflow');
          modal.remove();
          document.body.style.overflow = '';
        };
        
        // Close button event
        closeBtn.onclick = (e) => {
          e.preventDefault();
          e.stopPropagation();
          console.log('Close button clicked');
          closeModal();
        };

        // Build content HTML
        let html = '';
        if (image) html += `<img src="${image}" style="max-width: 100%; margin-bottom: 16px; border-radius: 4px; display: block;">`;
        if (title) html += `<h3 style="margin: 0 0 16px 0; color: #333; font-size: 20px;">${title}</h3>`;
        if (price) html += `<div style="margin-bottom: 16px; font-size: 18px; font-weight: 600; color: #10b981;">${price}</div>`;
        if (link) html += `<a href="${link}" style="display: block; text-align: center; background: #10b981; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: 500; margin-top: 16px;">View Product Details</a>`;

        content.innerHTML = html;
        content.appendChild(closeBtn);
        modal.appendChild(content);

        // Close on overlay click
        modal.onclick = (e) => {
          if (e.target === modal) {
            console.log('Overlay clicked, closing modal');
            closeModal();
          }
        };

        // Escape key handler
        const escapeHandler = (e) => {
          if (e.key === 'Escape') {
            console.log('Escape key pressed, closing modal');
            closeModal();
            document.removeEventListener('keydown', escapeHandler);
          }
        };
        document.addEventListener('keydown', escapeHandler);

        // Add modal to page
        console.log('Adding modal to page...');
        document.body.appendChild(modal);
        document.body.style.overflow = 'hidden';

        console.log('Modal added successfully!');

        // Cleanup when modal is removed
        modal.addEventListener('remove', () => {
          console.log('Modal removed event triggered');
          document.body.style.overflow = '';
          document.removeEventListener('keydown', escapeHandler);
        });
        
      } catch (error) {
        console.error('Error opening modal:', error);
        console.error('Error stack:', error.stack);
      }
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "Quickview",
  "target": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_quickview",
      "label": "Enable Quickview",
      "default": true,
      "info": "Enable quickview functionality for products on this page"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Quick View",
      "info": "Text to display on the quickview button"
    },
    {
      "type": "select",
      "id": "button_position",
      "label": "Button Position",
      "options": [
        { "value": "above", "label": "Above product image" },
        { "value": "below", "label": "Below product image" }
      ],
      "default": "below",
      "info": "Where to position the quickview button"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "Button Style",
      "options": [
        { "value": "primary", "label": "Primary" },
        { "value": "secondary", "label": "Secondary" },
        { "value": "outline", "label": "Outline" }
      ],
      "default": "primary",
      "info": "Style of the quickview button"
    },
    {
      "type": "select",
      "id": "button_size",
      "label": "Button Size",
      "options": [
        { "value": "small", "label": "Small" },
        { "value": "medium", "label": "Medium" },
        { "value": "large", "label": "Large" }
      ],
      "default": "medium",
      "info": "Size of the quickview button"
    },
    {
      "type": "checkbox",
      "id": "show_icon",
      "label": "Show Icon",
      "default": true,
      "info": "Show icon before button text"
    },
    {
      "type": "text",
      "id": "icon",
      "label": "Icon",
      "default": "👁️",
      "info": "Icon to display before button text (emoji or text)"
    },
    {
      "type": "color",
      "id": "custom_color",
      "label": "Custom Button Color",
      "info": "Custom background color for the button (optional)"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Custom Text Color",
      "info": "Custom text color for the button (optional)"
    },
    {
      "type": "checkbox",
      "id": "show_quickview_icon",
      "label": "Show Quickview Icon",
      "default": false,
      "info": "Show quickview icon after button text"
    },
    {
      "type": "text",
      "id": "quickview_icon",
      "label": "Quickview Icon",
      "default": "⚡",
      "info": "Icon to display after button text (emoji or text)"
    }
  ]
}
{% endschema %} 